gateway:
  timeout: 60000 #gateway超时时间公共变量
  retryable: false #gateway是否重试公共变量

spring:
  cloud:
    loadbalancer:
      retry: # 加了 zuul.retryable 貌似就行了
        enable: ${gateway.retryable}

endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false

zuul: #参见 org.springframework.cloud.netflix.zuul.filters.ZuulProperties
  ignoredPatterns: /health,/error
  sensitiveHeaders: #参考PreDecorationFilter, 设置敏感Header为空, 即不过滤响应头
  addHostHeader: true
  retryable: ${gateway.retryable} #是否重试
  host:
    socketTimeoutMillis: ${gateway.timeout}
    connectTimeoutMillis: ${gateway.timeout}
  routes:
    system-manager:
      path: /system/**
      serviceId: AQIER-SYSTEM-MANAGER
    sso-server:
      path: /sso/**
      serviceId: AQIER-SSO-SERVER
    database-server:
      path: /database/**
      serviceId: AQIER-DATABASE-SERVER

ribbon:
  ReadTimeout: ${gateway.timeout}
  ConnectTimeout: ${gateway.timeout}
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  OkToRetryOnAllOperations: false # 不启用重试后, MaxAutoRetries/MaxAutoRetriesNextServer 就没用了?
  IsSecure: true

hystrix:
  command:
    default:
      coreSize: 200 #并发执行的最大线程数，默认10
      maxQueueSize: 200 #BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 50 #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
      execution:
        timeout:
          enabled: true #false:禁用网关超时时间
        isolation:
          thread:
            timeoutInMilliseconds: ${gateway.timeout}
            ribbon:
              ReadTimeout: ${gateway.timeout}
              ConnectTimeout: ${gateway.timeout}
    #参见: https://cloud.spring.io/spring-cloud-static/spring-cloud-netflix/2.0.0.M5/single/spring-cloud-netflix.html#_hystrix_timeouts_and_ribbon_clients
    AQIER-DATABASE-SERVER:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: ${gateway.timeout}
    AQIER-SYSTEM-MANAGER:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: ${gateway.timeout}
    AQIER-SSO-SERVER:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: ${gateway.timeout}

AQIER-DATABASE-SERVER:
  ribbon:
    ConnectTimeout: ${gateway.timeout}
    ReadTimeout: ${gateway.timeout}
    #MaxTotalHttpConnections: 500
    #MaxConnectionsPerHost: 100

