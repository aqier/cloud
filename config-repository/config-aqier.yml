security:
    basic:
      enabled: true
    user:
      name: '{cipher}4ca754ebea60484e9e1a5a480a7c7f68382e4a463d03a35b968f88335a5f33e2'
      password: '{cipher}78c8e4d3e081f1c395b2bff6c64b4366ad8b1dfaef67dfa04161f8546bd654160b18f8dfab574068d4b89004610adc78'

domain:
  default: ${domain.default.value:localhost.aqier.com}
  redis:   ${domain.redis.value:${domain.default}}
  config:  ${domain.config.value:${domain.default}}
  eureka:  ${domain.eureka.value:${domain.default}}
  gateway: ${domain.gateway.value:${domain.default}}

server: 
  timeout: 60000
  tomcat: 
    maxThreads: 5
  ssl: #启用HTTPS
    enabled: true
    keyStore: ${protocol.config:https}://${security.user.name}:${security.user.password}@${domain.config}:${config.port:8888}/getCert
    keyStorePassword: '{cipher}e804f4acd981cdc39a85a64abdd05a0a86058b74779f346c4696d891b75eaeddfe00f1b95b0485d574525fcfd61b745c85e476a22ae438528fd2a020350508a6'
    keyStoreType: PKCS12
    #keyAlias: aqier

eureka:
  instance:
    securePort: ${server.port}
    securePortEnabled: true #访问eureka上注册的HTTPS服务, 貌似验证不通过
    nonSecurePortEnabled: false #访问eureka上注册的HTTPS服务, 貌似验证不通过
    hostname: ${server.domain:${domain.default}} #配置当前服务节点的 主机名, preferIpAddress = false时生效, 公共配置不需要
    leaseExpirationDurationInSeconds: 10 #Eureka服务器在接收到实例的最后一次发出的心跳后，需要等待多久才可以将此实例删除，默认为90秒, 这里设置10秒, 即快速响应, 服务一旦不可用立即移除
    leaseRenewalIntervalInSeconds: 5 #eureka客户端需要多长时间发送心跳给eureka服务器，表明它仍然活着,默认为30 秒
    preferIpAddress: false #注册时是否使用IP(false时使用主机名, 配合hostname)
    #ipAddress: 172.27.232.5 #与 preferIpAddress 一起使用可指定IP
    metadataMap: 
      hostname: ${eureka.instance.hostname}
      securePort: ${server.port}
  client:
    serviceUrl:
      defaultZone: ${protocol.eureka:https}://${security.user.name}:${security.user.password}@${domain.eureka}:${port.eureka:8889}/eureka/
    registerWithEureka: true #实例是否在eureka服务器上注册自己的信息以供其他服务发现，默认为true, 这里没有配置eureka地址, 不能启用
    fetchRegistry: true #此客户端是否获取eureka服务器注册表上的注册信息，默认为true

logging:
  level:
    root: INFO
    com.aqier.web.cloud: ${logging.level:DEBUG}
    org.apache.ibatis.logging.jdbc.BaseJdbcLogger: ${logging.level:DEBUG} #打印SQL

spring:
  cloud: 
    inetutils: 
      preferredNetworks: ^192  #设置推荐网络IP正则表达式, 如: ^172
      #ignoredInterfaces[0]: eth0 # 忽略eth0, 支持正则表达式
  datasource:
    port: 8887 #指定端口
    #type: com.alibaba.druid.pool.DruidDataSource #使用druid数据源
    #url: jdbc:h2:~/aqier
    url: jdbc:h2:tcp://localhost:${spring.datasource.port}/~/aqier #jdbc:mysql://cloud.aqier.com:3306/aqier
    driverClassName: org.h2.Driver #com.mysql.jdbc.Driver
    username: '{cipher}cbb0b63f3112f18cc054d3a025e7db97d6fb9ecbec3af17234ec073707a8d6d0'
    password: '{cipher}7df73bc4bbbba33ebfcf14929a43b98b8dab75e2d954d159d051e24613b85ef4'
    maxIdle: 10
    maxWait: 3000
    minIdle: 5
    initialSize: 5
    validationQuery: SELECT 1
    testOnBorrow: false
    testWhileIdle: true
    timeBetweenEvictionRunsMillis: 18800
    
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
    
  redis:
    host: ${domain.redis}
    port: ${port.redis:8086}
    password: '{cipher}7df73bc4bbbba33ebfcf14929a43b98b8dab75e2d954d159d051e24613b85ef4'
    timeout: 1800
  mail: #JavaMailSender
    host: '{cipher}ee58c533c69ee945dc04f0944cb332ba600e821cea637d64175b494f24cc78593d0238559331e5f81ca599321b70b580'
    port: 465
    from: '{cipher}d1348d5d26f3da0ae295f14305136b4e94a480a7d511833fa9352020a2f6def4'
    username: '{cipher}d1348d5d26f3da0ae295f14305136b4e94a480a7d511833fa9352020a2f6def4'
    password: '{cipher}a59f798fd56a397729c84ba22e83a3e9d87546ebd0a37d9aba05965c18f17f7d'
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
      mail.smtp.socketFactory.class: javax.net.ssl.SSLSocketFactory
      mail.smtp.timeout: 30000

ribbon:
  ReadTimeout: ${server.timeout}
  ConnectTimeout: ${server.timeout}
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  OkToRetryOnAllOperations: false # 不启用重试后, MaxAutoRetries/MaxAutoRetriesNextServer 就没用了?
  IsSecure: true
